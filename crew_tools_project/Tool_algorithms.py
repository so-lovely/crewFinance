import requests
from bs4 import BeautifulSoup
# The Algorithm Website


def show_algorithm_code(algorithm:str):
    # (e.g) algorithm = 'quick-sort'
    url = 'https://the-algorithms.com/algorithm/' + algorithm
    html = requests.get(url).text
    soup = BeautifulSoup(html, 'html.parser')
    parent = soup.find_all('pre')
    if parent:
        code = parent[0].text
        return code 
    else:
        return "Error: No code found for this algorithm. Website structure may have changed."

# The Algorithm Website

def get_algorithm(topics:str):
    # (e.g) topic = 'sorting'
    url = 'https://the-algorithms.com/category/'
    algorithms = []
    for topic in topics:
        url_into = url + topic
        html = requests.get(url_into).text
        soup = BeautifulSoup(html, 'html.parser')
        buttons = soup.find_all('a', attrs={'class':'MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary'})
        pythons = soup.find_all('img', attrs={'alt':'python'})
        matches = [python.parent.parent.parent.find_next_sibling() for python in pythons]
        buttons = list(filter(lambda x: x in matches, buttons))
        algorithm = [button['href'].split('/')[-1] for button in buttons]
        algorithms.extend(algorithm)
    #return python algorithm list
    return algorithms

def show_algorithms() -> list['str']:
    return ['bead-sort', 'binary-insertion-sort', 'bitonic-sort', 'bogo-sort', 'bubble-sort', 'bucket-sort', 'circle-sort', 'cocktail-shaker-sort', 'comb-sort', 'counting-sort', 'cycle-sort', 'double-sort', 'dutch-national-flag-sort', 'exchange-sort', 'external-sort', 'gnome-sort', 'heap-sort', 'insertion-sort', 'intro-sort', 'iterative-merge-sort', 'merge-insertion-sort', 'msd-radix-sort', 'natural-sort', 'odd-even-sort', 'odd-even-transposition-parallel', 'odd-even-transposition-single-threaded', 'pancake-sort', 'patience-sort', 'pigeon-sort', 'pigeonhole-sort', 'quick-sort', 'quick-sort-3-partition', 'radix-sort', 'recursive-insertion-sort', 'recursive-mergesort-array', 'recursive-quick-sort', 'selection-sort', 'shell-sort', 'shrink-shell-sort', 'slowsort', 'stooge-sort', 'strand-sort', 'tim-sort', 'topological-sort', 'tree-sort', 'unknown-sort', 'wiggle-sort', 'binary-search', 'binary-tree-traversal', 'double-linear-search', 'double-linear-search-recursion', 'fibonacci-search', 'hill-climbing', 'interpolation-search', 'jump-search', 'linear-search', 'median-of-medians', 'quick-select', 'sentinel-linear-search', 'simple-binary-search', 'simulated-annealing', 'tabu-search', 'ternary-search', 'abbreviation', 'all-construct', 'bitmask', 'catalan-numbers', 'climbing-stairs', 'combination-sum-iv', 'edit-distance', 'factorial', 'fast-fibonacci', 'fibonacci-numbers', 'fizz-buzz', 'floyd-warshall', 'integer-partition', 'iterating-through-submasks', 'k-means-clustering-tensorflow', 'knapsack', 'largest-divisible-subset', 'longest-common-subsequence', 'longest-common-substring', 'longest-increasing-subsequence', 'longest-increasing-subsequence-o-nlogn', 'longest-palindromic-subsequence', 'matrix-chain-multiplication', 'matrix-chain-order', 'max-non-adjacent-sum', 'max-product-subarray', 'max-subarray-sum', 'min-distance-up-bottom', 'minimum-coin-change', 'minimum-cost-path', 'minimum-partition', 'minimum-size-subarray-sum', 'minimum-squares-to-represent-a-number', 'minimum-steps-to-one', 'minimum-tickets-cost', 'optimal-binary-search-tree', 'palindrome-partitioning', 'regex-match', 'rod-cutting', 'smith-waterman', 'subset-generation', 'sum-of-subset', 'trapped-water', 'tribonacci', 'viterbi', 'wildcard-matching', 'word-break', 'a-1z-26', 'affine-cipher', 'atbash', 'autokey', 'baconian-cipher', 'base-16', 'base-32', 'base-64', 'base-85', 'beaufort-cipher', 'bifid', 'brute-force-caesar-cipher', 'caesar-cipher', 'cryptomath-module', 'decrypt-caesar-with-chi-squared', 'deterministic-miller-rabin', 'diffie', 'diffie-hellman', 'elgamal-key-generator', 'enigma-machine-2', 'fractionated-morse-cipher', 'hill-cipher', 'mixed-keyword-cypher', 'mono-alphabetic-ciphers', 'morse-code', 'onepad-cipher', 'permutation-cipher', 'playfair-cipher', 'polybius', 'porta-cipher', 'rabin-miller', 'rail-fence-cipher', 'rot-13', 'rsa-cipher', 'rsa-factorization', 'rsa-key-generator', 'running-key-cipher', 'shuffled-shift-cipher', 'simple-keyword-cypher', 'simple-substitution-cipher', 'transposition-cipher', 'transposition-cipher-encrypt-decrypt-file', 'trifid-cipher', 'vernam-cipher', 'vigenere-cipher', 'xor-cipher', 'equilibrium-index-in-array', 'find-triplets-with-0-sum', 'index-2d-array-in-1d', 'kth-largest-element', 'median-two-array', 'monotonic-array', 'pairs-with-given-sum', 'permutations', 'prefix-sum', 'product-sum', 'sparse-table', 'avl-tree', 'basic-binary-tree', 'binary-search-tree', 'binary-search-tree-recursive', 'binary-tree-mirror', 'binary-tree-node-sum', 'binary-tree-path-sum', 'binary-tree-traversals', 'diameter-of-binary-tree', 'diff-views-of-binary-tree', 'distribute-coins', 'fenwick-tree', 'flatten-binarytree-to-linkedlist', 'floor-and-ceiling', 'inorder-tree-traversal-2022', 'is-sorted', 'is-sum-tree', 'lazy-segment-tree', 'lowest-common-ancestor', 'maximum-fenwick-tree', 'merge-two-binary-trees', 'mirror-binary-tree', 'non-recursive-segment-tree', 'number-of-possible-binary-trees', 'red-black-tree', 'segment-tree', 'segment-tree-other', 'serialize-deserialize-binary-tree', 'symmetric-tree', 'treap', 'wavelet-tree', 'alternate-disjoint-set', 'disjoint-set', 'bloom-filter', 'double-hash', 'hash-map', 'hash-table', 'hash-table-with-linked-list', 'prime', 'quadratic-probing', 'binomial-heap', 'heap', 'heap-generic', 'max-heap', 'min-heap', 'randomized-heap', 'skew-heap', 'circular-linked-list', 'deque-doubly', 'doubly-linked-list', 'doubly-linked-list-two', 'floyds-cycle-detection', 'from-sequence', 'has-loop', 'is-palindrome', 'merge-two-lists', 'middle-element-of-linked-list', 'print-reverse', 'reverse-k-group', 'rotate-to-the-right', 'singly-linked-list', 'skip-list', 'swap-nodes', 'circular-queue', 'circular-queue-linked-list', 'double-ended-queue', 'linked-queue', 'priority-queue-using-list', 'queue-by-list', 'queue-by-two-stacks', 'queue-on-pseudo-stack', 'balanced-parentheses', 'dijkstras-two-stack-algorithm', 'infix-to-postfix-conversion', 'infix-to-prefix-conversion', 'next-greater-element', 'postfix-evaluation', 'prefix-evaluation', 'stack', 'stack-using-two-queues', 'stack-with-doubly-linked-list', 'stack-with-singly-linked-list', 'stock-span-problem', 'radix-tree', 'trie', 'abs', 'addition-without-arithmetic', 'aliquot-sum', 'allocation-number', 'arc-length', 'area', 'area-under-curve', 'average-absolute-deviation', 'average-mean', 'average-median', 'average-mode', 'bailey-borwein-plouffe', 'base-neg-2-conversion', 'basic-maths', 'binary-exponentiation', 'binary-multiplication', 'binomial-coefficient', 'binomial-distribution', 'ceil', 'chebyshev-distance', 'check-polygon', 'chinese-remainder-theorem', 'chudnovsky-algorithm', 'collatz-sequence', 'combinations', 'continued-fraction', 'decimal-isolate', 'decimal-to-fraction', 'dodecahedron', 'double-factorial', 'dual-number-automatic-differentiation', 'entropy', 'euclidean-distance', 'euler-method', 'euler-modified', 'eulers-totient', 'extended-euclidean-algorithm', 'factors', 'fast-inverse-sqrt', 'fermats-little-theorem', 'find-max', 'find-min', 'floor', 'gamma', 'gaussian', 'gcd-of-n-numbers', 'germain-primes', 'greatest-common-divisor', 'hardy-ramanujanalgo', 'integer-square-root', 'interquartile-range', 'is-int-palindrome', 'is-ip-v-4-address-valid', 'is-square-free', 'jaccard-similarity', 'joint-probability-distribution', 'josephus-problem', 'juggler-sequence', 'karatsuba', 'kth-lexicographic-permutation', 'largest-of-very-large-numbers', 'least-common-multiple', 'line-length', 'liouville-lambda', 'lucas-series', 'maclaurin-series', 'manhattan-distance', 'matrix-exponentiation', 'max-sum-sliding-window', 'median-of-two-arrays', 'minkowski-distance', 'mobius-function', 'modular-division', 'modular-exponential', 'monte-carlo', 'monte-carlo-dice', 'number-of-digits', 'adams-bashforth', 'bisection', 'bisection-2', 'integration-by-simpson-approx', 'intersection', 'nevilles-method', 'newton-forward-interpolation', 'newton-raphson', 'numerical-integration', 'proper-fractions', 'runge-kutta', 'runge-kutta-fehlberg-45', 'runge-kutta-gills', 'secant-method', 'simpson-rule', 'square-root', 'odd-sieve', 'perfect-cube', 'perfect-number', 'perfect-square', 'persistence', 'pi-generator', 'pi-monte-carlo-estimation', 'points-are-collinear-3d', 'pollard-rho', 'polynomial-evaluation', 'single-indeterminate-operations', 'power-using-recursion', 'prime-factors', 'prime-sieve-eratosthenes', 'primelib', 'print-multiplication-table', 'pythagoras', 'qr-decomposition', 'quadratic-equations-complex-numbers', 'degrees-to-radians', 'radix-2-fft', 'remove-digit', 'segmented-sieve', 'arithmetic-mean', 'geometric', 'geometric-series', 'harmonic', 'harmonic-series', 'hexagonal-numbers', 'p-series', 'sieve-of-eratosthenes', 'sigmoid', 'signum', 'simultaneous-linear-equation-solver', 'sin', 'sock-merchant', 'softmax', 'sumset', 'spearman-rank-correlation-coefficient', 'armstrong-number', 'automorphic-number', 'bell-numbers', 'carmichael-number', 'catalan-number', 'hamming-numbers', 'happy-number', 'harshad-numbers', 'hexagonal-number', 'krishnamurthy-number', 'polygonal-numbers', 'pronic-number', 'proth-number', 'triangular-numbers', 'ugly-numbers', 'weird-number', 'sum-of-arithmetic-series', 'sum-of-digits', 'sum-of-geometric-progression', 'sum-of-harmonic-series', 'sylvester-sequence', 'tanh', 'three-sum', 'trapezoidal-rule', 'triplet-sum', 'twin-prime', 'two-pointer', 'two-sum', 'volume', 'zellers-congruence', 'change-brightness', 'change-contrast', 'convert-to-negative', 'burkes', 'canny', 'bilateral-filter', 'convolve', 'gabor-filter', 'gaussian-filter', 'laplacian-filter', 'local-binary-pattern', 'median-filter', 'sobel-filter', 'histogram-stretch', 'index-calculation', 'dilation-operation', 'erosion-operation', 'resize', 'rotation', 'sepia', 'aho-corasick', 'alternative-string-arrange', 'anagram', 'autocomplete-using-trie', 'barcode-validator', 'bitap-string-match', 'boyer-moore-search', 'camel-case-to-snake-case', 'can-string-be-rearranged-as-palindrome', 'capitalize', 'check-anagram', 'credit-card-validator', 'damerau-levenshtein-distance', 'detecting-english-programmatically', 'dna', 'frequency-finder', 'hamming-distance', 'indian-phone-validator', 'is-contains-unique-chars', 'is-isogram', 'is-pangram', 'is-polish-national-id', 'is-spain-national-id', 'is-srilankan-phone-number', 'is-valid-email-address', 'jaro-winkler', 'join', 'knuth-morris-pratt', 'levenshtein-distance', 'lower', 'manacher', 'min-cost-string-conversion', 'naive-string-search', 'ngram', 'palindrome', 'pig-latin', 'prefix-function', 'rabin-karp', 'remove-duplicate', 'reverse-letters', 'reverse-words', 'snake-case-to-camel-pascal-case', 'split', 'string-switch-case', 'strip', 'text-justification', 'title', 'top-k-frequent-words', 'upper', 'wave', 'wildcard-pattern-matching', 'word-occurrence', 'word-patterns', 'z-function']
    
"""topics = ['sorts','searches','dynamicprogramming','ciphers','datastructures','math',
              'digitalimageprocessing','strings']
              algorithms = get_algorithm(topics)"""
